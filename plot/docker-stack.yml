version: "3"

services:
  reverse_proxy:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # - ./reverse_proxy/default.conf:/etc/nginx/conf.d/default.conf
      - /opt/plot/static:/var/www/static
      - /mnt/FileServer:/var/www/media
    networks:
      - front-tier
  # database:
  #   image: pxc:latest
  #   environment:
  #     MYSQL_ROOT_PASSWORD: iiecas
  #     XTRABACKUP_PASSWORD: iiecas
  #     CLUSTER_NAME: pxc-cluster
  #   networks:
  #     - back-tier
  #   volumes:
  #     - db1:/var/lib/mysql
  #     - backup:/data
  #     - ./database/conf/:/etc/mysql/conf.d
  #     - ./database/initialdb/:/docker-entrypoint-initdb.d
  #   deploy:
  #     placement:
  #       constraints:
  #         - "node.role == manager"
  # redis:
  #   image: redis:latest
  #   volumes:
  #     - redis-data:/data
  #     - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
  #   networks:
  #     - back-tier
  #   command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
  #   deploy:
  #     placement:
  #       constraints:
  #         - "node.role == manager"
  # appserver:
  #   image: plot:3.8
  #   networks:
  #     - front-tier
  #     - back-tier
  #   environment:
  #     redis_host: ${REDIS_HOST}
  #     redis_port: ${REDIS_PORT}
  #   volumes:
  #     - /etc/localtime:/etc/localtime
  #     - ${CODES_DIR}:/var/www
  #     - ./config/supervisor:/var/www/config/supervisor
  #     - ${NFS_DIR}:/var/www/media
  #   command: "supervisord -c /var/www/config/supervisor/supervisord.conf"
  #   deploy:
  #     replicas: 2
  #     update_config:
  #       parallelism: 2
  #       failure_action: rollback
  #     # placement:
  #     #   constraints:
  #     #     - "node.role == manager"
  #     restart_policy:
  #       condition: on-failure
  #       delay: 5s
  #       max_attempts: 3
  #       window: 120s

networks:
  front-tier:
  back-tier:

volumes:
  db1:
  backup:
  redis-data:
